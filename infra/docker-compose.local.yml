services:

  db:
    image: postgres:15.0-alpine
    container_name: "db"
    volumes:
      - postgres_value:/var/lib/postgresql/data/
    restart: always
    env_file:
      - ./.env
  
  redis:
    image: redis:7-alpine
    container_name: funtech_redis
    restart: always
    ports:
      - 6370:6379

  backend:
    build: ../
    container_name: "backend"
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    restart: always
    depends_on:
      - db
    env_file:
      - ./.env
    command: >
      sh -c "gunicorn config.wsgi:application --bind 0:8000"

  frontend:
    # Settings for building image from a cloned frontend repository (mind the branch)
    build: ../../Funtech/
    container_name: funtech_frontend
    command: cp -r /app/dist/. /frontend_static/
    volumes:
      - frontend_build_value:/frontend_static
    env_file:
      - ./.env
    depends_on:
      - backend
  
  celery_worker:
    build: ../
    image: funtech_celery_worker
    container_name: funtech_celery_worker
    command: celery -A config.celery.app worker -l INFO
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    env_file:
      - ./.env
    restart: always
    depends_on:
      - db
      - redis

  nginx:
    image: nginx:1.25.3-alpine
    container_name: "nginx"
    ports:
      - "80:80"
    volumes:
      - ./nginx.local.conf:/etc/nginx/conf.d/default.conf
      - frontend_build_value:/usr/share/nginx/html/
      - static_value:/var/html/static
      - media_value:/var/html/media/
    restart: always
    depends_on:
      - frontend

volumes:
  postgres_value:
  static_value:
  media_value:
  frontend_build_value:
